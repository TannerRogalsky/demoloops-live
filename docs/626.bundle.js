(self.webpackChunkdemoloops_js=self.webpackChunkdemoloops_js||[]).push([[626],{626:(e,n,t)=>{"use strict";t.r(n);var o=t(634),r=t(631),a=t.n(r),l=t(935),i=t(294);const s="fn update(ratio, width, height) {\n    let ctx = Context();\n    ctx.clear(Color(0.4, 0.4, 0.8, 1.0));\n\n    let n = 6;\n    let radius = 50.0;\n    let inner_radius = 10.0;\n\n    let exterior_angle = 360.0 / n.to_float();\n    let interior_angle = 180.0 - exterior_angle;\n    let side = 2.0 * (radius + inner_radius) * (180.0 / n.to_float()).sin();\n    let apothem = radius * (180.0 / n.to_float()).cos();\n\n    let central_shape = RegularPolygon(0.0, 0.0, n, radius);\n    let central_color = Color(0.6, 0.2, 0.6, 1.0);\n\n    let outer_shape = RegularPolygon(0.0, 0.0, 6, inner_radius);\n    let outer_color = Color(0.2, 0.2, 0.8, 1.0);\n\n    let black = Color(0.0, 0.0, 0.0, 1.0);\n\n    for y in range(0, 10) {\n        for x in range(0, 10) {\n            let x_offset = (y % 2).to_float() * 0.5;\n            let x_offset = x.to_float() + x_offset;\n            let x = x_offset * radius * 2.0;\n            let y = y.to_float() * apothem * 2.0;\n            \n            let origin = Translation(x, y);\n            ctx.draw(central_shape, origin, central_color);\n            ctx.stroke(central_shape, origin, black);\n        }\n    }\n\n    for y in range(0, 10) {\n        for x in range(0, 10) {\n            let x_offset = (y % 2).to_float() * 0.5;\n            let x_offset = x.to_float() + x_offset;\n            let x = x_offset * radius * 2.0;\n            let y = y.to_float() * apothem * 2.0;\n            \n            let origin = Translation(x, y);\n\n            for i in range(0, n) {\n                let inner_ratio = i.to_float() / n.to_float();\n                let mu = inner_ratio * 360.0;\n                let outer_transform = origin \n                    * Rotation(mu)\n                    * Translation(radius + inner_radius, 0.0)\n                    * Rotation(interior_angle)\n                    * Translation(side * ratio, 0.0)\n                    ;\n\n                ctx.draw(outer_shape, outer_transform, outer_color);\n                // ctx.stroke(outer_shape, outer_transform, black);\n            }\n        }\n    }\n\n    ctx\n}";function c(e){return i.createElement("div",{id:"container"},i.createElement("div",{id:"codeMirrorContainer",ref:n=>{if(n&&!e.editor){let t=a()(n,{value:s,mode:"rhai",theme:"default",lineNumbers:!0,indentUnit:4,matchBrackets:!0,viewportMargin:1/0,foldGutter:{rangeFinder:a().fold.brace},gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"],styleActiveLine:!0,highlightSelectionMatches:{minChars:3,showToken:!0,annotateScrollbar:!0},rulers:[{column:80,color:"#ccc"}],autoCloseBrackets:{pairs:"()[]{}''\"\"",closeBefore:")]}'\":;,",triples:"",explode:"()[]{}"},extraKeys:{Tab:e=>{e.somethingSelected()?e.indentSelection("add"):e.execCommand("insertSoftTab")},"Ctrl-/":"toggleComment"}});t.on("change",((n,t)=>{const o=e.loop.update(n.getValue());o&&console.error(o)})),e.editor=t}}}),i.createElement("div",{id:"loopContainer"},i.createElement("canvas",{id:"canvas",ref:e.loopRef})))}t(380),t(504),t(511),t(801),t(328),t(688),t(700),t(138),t(366),t(17);var d=t(379),f=t.n(d),u=t(452);f()(u.Z,{insert:"head",singleton:!1}),u.Z.locals,(0,o.kO3)(a().Pass),a().defineMode("rhai",((e,n)=>new o.G9U(e.indentUnit)));let _=document.createElement("div");document.body.appendChild(_);const g={loopRef:e=>{let n=new o.F_z;n.update(s);let t=()=>{n.step(),requestAnimationFrame(t)};requestAnimationFrame(t),g.loop=n,l.render(c(g),_)},loop:null};l.render(c(g),_)},452:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var o=t(645),r=t.n(o)()((function(e){return e[1]}));r.push([e.id,"#container {\r\n\tdisplay: flex;\r\n}\r\n\r\n#codeMirrorContainer {\r\n\tflex-grow: 1;\r\n}\r\n\r\n#loopContainer {}\r\n\r\n.CodeMirror {\r\n\theight: auto;\r\n}",""]);const a=r}}]);